import asyncio
from os import getenv

from dotenv import load_dotenv
from telebot.async_telebot import AsyncTeleBot
from telebot.types import Message

from .integration import ChatGPT
from .utils import DBDialog

load_dotenv()


bot = AsyncTeleBot(getenv('TOKEN'))
db_dialog = DBDialog()  # –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ DBDialog
db_dialog.add_dialog('0', '–°–∏—Å—Ç–µ–º–∞')  # –°–æ–∑–¥–∞—ë–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏–∞–ª–æ–≥
chat_gpt = ChatGPT(getenv('GPT_TOKEN'))  # –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ ChatGPT


@bot.message_handler(commands=['start'])
async def handler_command_start(message: Message) -> None:
    system_dialog = db_dialog.get_messages('0')  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    system_dialog.append({"role": "user", "content": "–ö—Ç–æ —Ç—ã –∏ —á–µ–º —Ç—ã –ø–æ–ª–µ–∑–µ–Ω? –û—Ñ–æ—Ä–º–∏ —Ç–µ–∫—Å—Ç —Å–º–∞–π–ª–∏–∫–∞–º–∏."})
    chat_gpt_answer = await chat_gpt.answer(system_dialog)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∏–∞–ª–æ–≥ –≤ Chat GPT
    await bot.reply_to(message,
                       f'{chat_gpt_answer["choices"][0]["message"]["content"]}')  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


@bot.message_handler(commands=['reset'])
async def handler_command_reset(message: Message) -> None:
    user_id = message.from_user.id
    if db_dialog.get_messages(user_id):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
        db_dialog.del_dialog(user_id)  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    await bot.reply_to(message, '–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ —Å–±—Ä–æ—à–µ–Ω üí¨')


@bot.message_handler(func=lambda message: True)
async def handler_chat_gpt(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å Chat GPT
    :param message: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Message
    :return: None
    """
    user_id = message.from_user.id
    first_name = message.from_user.first_name
    db_dialog.add_dialog(user_id, first_name)  # –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–∞–ª–æ–≥, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    db_dialog.add_message(user_id, 'user', message.text)  # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–∏–∞–ª–æ–≥
    user_messages = db_dialog.get_messages(user_id)  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_gpt_answer = await chat_gpt.answer(user_messages)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Chat GPT
    db_dialog.add_message(user_id, 'assistant',
                          chat_gpt_answer["choices"][0]["message"]["content"])  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –¥–∏–∞–ª–æ–≥
    await bot.reply_to(message, chat_gpt_answer["choices"][0]["message"]["content"])  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if len(db_dialog.get_messages(user_id)) > 30:  # –ï—Å–ª–∏ –≤ –¥–∏–∞–ª–æ–≥–µ –±–æ–ª—å—à–µ 30 —Å–æ–æ–±—â–µ–Ω–∏–π, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ
        db_dialog.del_dialog(user_id)  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥


asyncio.run(bot.polling())
